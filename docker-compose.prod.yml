version: "3.9"

networks:
  public:
  internal:
    internal: true

volumes:
  caddy_data:
  caddy_config:
  pg_data:
  nats_data:

services:
  caddy:
    image: caddy:2.8-alpine
    restart: unless-stopped
    depends_on:
      - client
      - matchmaker-httpd
      - lobby
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN: ${DOMAIN}
      EMAIL: ${EMAIL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks: [public, internal]
    read_only: true
    tmpfs: ["/tmp"]
    security_opt:
      - "no-new-privileges:true"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  client:
    image: ${CLIENT_IMAGE}
    restart: unless-stopped
    environment:
      - MATCHMAKER_URL=wss://${DOMAIN}/matchmaker/ws
    networks: [internal]
    read_only: false
    tmpfs: ["/tmp"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nats:
    image: nats:2.10-alpine
    restart: unless-stopped
    # The nats image already runs nats-server; this passes the config path
    command: ["--config", "/config/nats-server.conf"]
    networks: [internal]
    ports:
      - "4222:4222"
    volumes:
      - /opt/voidloop/nats-config:/config:ro
      - nats_data:/data
    read_only: true
    tmpfs:
      - /tmp
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  matchmaker-httpd:
    image: ${MM_HTTPD_IMAGE}
    restart: unless-stopped
    environment:
      - NATS_HOST=nats
      - NATS_USER=matchmaker-httpd
      - NATS_PASSWORD=${NATS_PASSWORD}
      - NATS_CA=/nats-ca/rootCA.pem
    volumes:
      - /opt/voidloop/nats-config/rootCA.pem:/nats-ca/rootCA.pem:ro
    command: >
      --bind 0.0.0.0:3000
      --cors https://${DOMAIN}
      --player-limit ${MAX_PLAYERS}
      --fake-ip 127.0.0.1
    networks: [internal, public]
    read_only: true
    tmpfs: ["/tmp"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  matchmaker:
    image: ${MM_IMAGE}
    restart: unless-stopped
    environment:
      - NATS_HOST=nats
      - NATS_USER=matchmaker
      - NATS_PASSWORD=${NATS_PASSWORD}
      - NATS_CA=/nats-ca/rootCA.pem
      - EDGEGAP_API_KEY=${EDGEGAP_API_KEY}
    volumes:
      - /opt/voidloop/nats-config/rootCA.pem:/nats-ca/rootCA.pem:ro
    command: >
      --app-name voidloop-quest
      --app-version v0.0.17
      --lightyear-protocol-id ${LIGHTYEAR_PROTOCOL_ID}
      --lightyear-private-key "${LIGHTYEAR_PRIVATE_KEY}"
      --player-limit ${MAX_PLAYERS}
    networks: [internal, public]
    read_only: true
    tmpfs: ["/tmp"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=lobby
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=voidloop_lobby
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lobby -d voidloop_lobby || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  lobby:
    image: ${LOBBY_IMAGE}
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://lobby:${DB_PASSWORD}@postgres:5432/voidloop_lobby
      - JWT_SECRET=${JWT_SECRET}
      - NATS_HOST=nats
      - NATS_USER=lobby
      - NATS_PASSWORD=${NATS_PASSWORD}
      - NATS_CA=/nats-ca/rootCA.pem
    volumes:
      - /opt/voidloop/nats-config/rootCA.pem:/nats-ca/rootCA.pem:ro
    depends_on:
      - postgres
      - nats
    networks: [internal, public]
    read_only: true
    tmpfs: ["/tmp"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3001/ || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
