version: "3.9"

networks:
  public:
  internal:
    internal: true

volumes:
  nats-data:
  postgres_data:
  traefik-data:

services:
  # üîÑ Traefik Reverse Proxy (TLS + routing)
  traefik:
    image: traefik:3.2
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Redirect HTTP -> HTTPS
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      # Let's Encrypt
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/data/acme.json
      # Dashboard disabled (recommended). If you need it, expose with auth, not port 8080.
      - --api.dashboard=false
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/data
    networks: [public, internal]

  # üì¨ NATS - Message Broker (private, with auth)
  nats:
    image: nats:2.10.21
    restart: unless-stopped
    command: ["-p", "4222", "-user", "${NATS_USER}", "-pass", "${NATS_PASSWORD}"]
    volumes:
      - nats-data:/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks: [internal]

  # üåê Game Client (static site) ‚Äî served via Traefik
  voidloop-client:
    image: voidloop-quest-client:latest
    restart: unless-stopped
    environment:
      - MATCHMAKER_URL=wss://voidloop.quest/matchmaker/ws
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`voidloop.quest`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=le"
      - "traefik.http.services.client.loadbalancer.server.port=80"
    networks: [internal]

  # üì° BevyGap Matchmaker HTTPD (private; routed at /matchmaker)
  matchmaker-httpd:
    image: bevygap_matchmaker_httpd
    build:
      context: ./work/bevygap
      dockerfile: ./bevygap_matchmaker_httpd/Dockerfile
    restart: unless-stopped
    environment:
      NATS_USER: "${NATS_HTTPD_USER:-matchmaker_httpd}"
      NATS_PASS: "${NATS_HTTPD_PASS:-matchmaker_httpd}"
      NATS_HOST: "nats"
      NATS_INSECURE: "set"
    command: >
      --bind 0.0.0.0:3000
      --cors https://voidloop.quest
      --player-limit 4
      --fake-ip 127.0.0.1
    depends_on:
      nats:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matchmaker.rule=Host(`voidloop.quest`) && PathPrefix(`/matchmaker`)"
      - "traefik.http.routers.matchmaker.entrypoints=websecure"
      - "traefik.http.routers.matchmaker.tls.certresolver=le"
      - "traefik.http.services.matchmaker.loadbalancer.server.port=3000"
    networks: [internal]

  # üé≤ BevyGap Matchmaker Service (private)
  matchmaker:
    image: bevygap_matchmaker
    build:
      context: ./work/bevygap
      dockerfile: ./bevygap_matchmaker/Dockerfile
    restart: unless-stopped
    environment:
      NATS_USER: "${NATS_MM_USER:-matchmaker}"
      NATS_PASS: "${NATS_MM_PASS:-matchmaker}"
      NATS_HOST: "nats"
      NATS_INSECURE: "set"
      EDGEGAP_API_KEY: "${EDGEGAP_API_KEY}"
    command: >
      --app-name voidloop-quest
      --app-version 1
      --lightyear-protocol-id ${LIGHTYEAR_PROTOCOL_ID}
      --lightyear-private-key "${LIGHTYEAR_PRIVATE_KEY}"
      --player-limit 16
    depends_on:
      nats:
        condition: service_healthy
    networks: [internal]

  # üè† Lobby API (optional; private; routed at /lobby)
  lobby:
    image: voidloop-quest-lobby:latest
    build:
      context: .
      dockerfile: ./tools/lobby-server/Dockerfile
    restart: unless-stopped
    environment:
      RUST_LOG: "info"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lobby.rule=Host(`voidloop.quest`) && PathPrefix(`/lobby`)"
      - "traefik.http.routers.lobby.entrypoints=websecure"
      - "traefik.http.routers.lobby.tls.certresolver=le"
      - "traefik.http.services.lobby.loadbalancer.server.port=3001"
    networks: [internal]

  # üóÑÔ∏è PostgreSQL for Lobby (private)
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: lobby
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: voidloop_lobby
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [internal]