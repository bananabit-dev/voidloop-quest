use serde::Serialize;

/// Build metadata information generated by vergen at compile time
#[derive(Debug, Clone, Serialize)]
pub struct BuildInfo {
    /// Git commit SHA
    pub git_sha: &'static str,
    /// Git branch name  
    pub git_branch: &'static str,
    /// Build timestamp
    pub build_timestamp: &'static str,
    /// Cargo target triple
    pub target_triple: &'static str,
    /// Rust compiler version
    pub rustc_version: &'static str,
    /// Cargo version
    pub cargo_version: &'static str,
    /// Package version
    pub package_version: &'static str,
}

impl BuildInfo {
    /// Get the build information from environment variables set by vergen
    pub fn get() -> Self {
        Self {
            git_sha: env!("VERGEN_GIT_SHA"),
            git_branch: env!("VERGEN_GIT_BRANCH"),
            build_timestamp: env!("VERGEN_BUILD_TIMESTAMP"),
            target_triple: env!("VERGEN_CARGO_TARGET_TRIPLE"),
            rustc_version: env!("VERGEN_RUSTC_SEMVER"),
            cargo_version: env!("VERGEN_CARGO_SEMVER"),
            package_version: env!("CARGO_PKG_VERSION"),
        }
    }

    /// Format build info for logging
    pub fn format_for_log(&self) -> String {
        format!(
            "Build: {} ({}), Git: {} @ {}, Rust: {}, Target: {}",
            self.package_version,
            self.build_timestamp,
            &self.git_sha[..8], // Shortened SHA
            self.git_branch,
            self.rustc_version,
            self.target_triple
        )
    }
}

impl Default for BuildInfo {
    fn default() -> Self {
        Self::get()
    }
}